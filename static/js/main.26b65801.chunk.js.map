{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","a","jsonUploads","document","getElementById","files","shardUploads","concatArray","Array","from","concat","console","log","tf","browserFiles","model","class","type","id","title","webkitdirectory","directory","onClick","this","loadModel","href","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gZAAe,I,gBCMTA,E,sMAEJ,kCAAAC,EAAA,6DACMC,EAAeC,SAASC,eAAe,eAAeC,MACtDC,EAAeH,SAASC,eAAe,gBAAgBC,MACvDE,EAAcC,MAAMC,KAAKP,GAAaQ,OAAOF,MAAMC,KAAKH,IAC5DK,QAAQC,IAAIL,GAJd,SAKsBM,IAAmBA,IAAMC,aAAaP,IAL5D,OAKQQ,EALR,OAMEJ,QAAQC,IAAIG,GANd,2C,0EASA,WACE,OACE,qBAAKC,MAAM,UAAX,SACE,gCACE,uBAAOC,KAAK,OAAOC,GAAG,cAAcC,MAAM,YAAYC,gBAAgB,GAAGC,UAAU,KACnF,uBAAOJ,KAAK,OAAOC,GAAG,eAAeC,MAAM,YAAYC,gBAAgB,GAAGC,UAAU,KACpF,wBAAQC,QAASC,KAAKC,UAAtB,oBACA,gCACE,sBAAKR,MAAM,OAAX,oBAAyB,gDACzB,mBAAGS,KAAK,GAAGT,MAAM,WAAjB,kBACA,mBAAGS,KAAK,GAAGT,MAAM,WAAjB,mBACA,mBAAGS,KAAK,GAAGT,MAAM,kBAAjB,uBACA,mBAAGS,KAAK,GAAGT,MAAM,WAAjB,iC,GAvBMU,aA+BH1B,ICzBA2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAM1BuB,M","file":"static/js/main.26b65801.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from \"react\"\nimport logo from './logo.svg';\n//import './App.css';\n//https://drive.google.com/u/1/uc?id=10MTjV9pEvFEOwas7FAaw2_ZMRTF5M4nB&export=download\nimport * as tf from '@tensorflow/tfjs';\n//https://drive.google.com/u/0/uc?id=1axaZixjs1KtZtUd1lKz1j2V0owMneC_v&export=download\nclass App extends Component {\n\n  async loadModel(){\n    let jsonUploads  = document.getElementById(\"jsonuploads\").files\n    let shardUploads = document.getElementById(\"sharduploads\").files\n    let concatArray = Array.from(jsonUploads).concat(Array.from(shardUploads));\n    console.log(concatArray)\n    const model = await tf.loadLayersModel(tf.io.browserFiles(concatArray));\n    console.log(model)\n  }\n\n  render(){\n    return (\n      <div class=\"sidebar\">\n        <div>\n          <input type=\"file\" id=\"jsonuploads\" title=\"your text\" webkitdirectory=\"\" directory=\"\" />\n          <input type=\"file\" id=\"sharduploads\" title=\"your text\" webkitdirectory=\"\" directory=\"\" />\n          <button onClick={this.loadModel}>submit</button>\n          <nav>\n            <div class=\"logo\">Awesome<span>Portfolio</span></div>\n            <a href=\"\" class=\"nav-item\">Home</a>\n            <a href=\"\" class=\"nav-item\">About</a>\n            <a href=\"\" class=\"nav-item active\">Portfolio</a>\n            <a href=\"\" class=\"nav-item\">Contact</a>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}